# === TELEGRAM APP ===
from telegram.ext import ApplicationBuilder, CommandHandler
from telegram_bot import start, list_birthdays
from config import TELEGRAM_TOKEN
from telegram_bot import start, list_birthdays, all_birthdays  # –¥–æ–¥–∞–Ω–æ all_birthdays
from telegram_bot import handle_message
from telegram_bot import all_birthdays, handle_message
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters



# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram-–∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫
app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

# –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("list", list_birthdays))
app.add_handler(CommandHandler("alllist", all_birthdays))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
app.add_handler(CommandHandler("alllist", all_birthdays))

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º—ñ —Å–ª—É—Ö–∞—á–∞
if __name__ == '__main__':
    print('ü§ñ –ë–æ—Ç —Å–ª—É—Ö–∞—î. –ù–∞–ø–∏—à—ñ—Ç—å /start, —â–æ–± –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å...')
    app.run_polling()

# === MAIN SCRIPT ===
import asyncio

# üì• –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–º–µ–Ω–∏–Ω–Ω–∏–∫—ñ–≤ –∑ Google –¢–∞–±–ª–∏—Ü—ñ
from google_sheets import get_birthdays_from_sheet

# üìÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ Google –ö–∞–ª–µ–Ω–¥–∞—Ä–µ–º
from google_calendar import sync_birthdays_to_calendar

# üì§ –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É Telegram
from telegram_bot import send_monthly_birthdays, notify_updates

# üõ†Ô∏è –û–±—Ä–æ–±–∫–∞ —ñ–º–µ–Ω–∏–Ω–Ω–∏–∫—ñ–≤
from birthday_utils import filter_this_month, detect_new_birthdays

# üßæ –õ–æ–≥—É–≤–∞–Ω–Ω—è (—â–æ–± –Ω–µ –¥—É–±–ª—é–≤–∞—Ç–∏ –ø–æ–¥—ñ—ó)
from logger import log_birthdays, was_logged


# üîÅ –û—Å–Ω–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async def main_async():
    # 1. –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –∑ —Ç–∞–±–ª–∏—Ü—ñ
    birthdays = get_birthdays_from_sheet()

    # 2. –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–æ–≤–∏—Ö –ª—é–¥–µ–π
    new_birthdays = detect_new_birthdays(birthdays)

    # 3. –§—ñ–ª—å—Ç—Ä—É—î–º–æ –ª–∏—à–µ —Ç–∏—Ö, –∫–æ–≥–æ —â–µ –Ω–µ –¥–æ–¥–∞–≤–∞–ª–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä
    birthdays_to_add = [
        b for b in new_birthdays
        if not was_logged(b['name'], b['date'], 'calendar')
    ]

    # 4. –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏—Ö –ª—é–¥–µ–π —É –∫–∞–ª–µ–Ω–¥–∞—Ä + –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –≤ Telegram
    if birthdays_to_add:
        sync_birthdays_to_calendar(birthdays_to_add)
        log_birthdays(birthdays_to_add, 'calendar')
        await notify_updates(birthdays_to_add)

    # 5. –í–∏–±–∏—Ä–∞—î–º–æ —ñ–º–µ–Ω–∏–Ω–Ω–∏–∫—ñ–≤ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –º—ñ—Å—è—Ü—è
    this_month_birthdays = filter_this_month(birthdays)

    # 6. –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ —Ç–∏–º, –∫–æ–≥–æ —â–µ –Ω–µ –≤—ñ—Ç–∞–ª–∏ —Ü—å–æ–≥–æ –º—ñ—Å—è—Ü—è
    birthdays_to_notify = [
        b for b in this_month_birthdays
        if not was_logged(b['name'], b['date'], 'telegram')
    ]

    if birthdays_to_notify:
        await send_monthly_birthdays(birthdays_to_notify)
        log_birthdays(birthdays_to_notify, 'telegram')


# üöÄ –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É
if __name__ == '__main__':
    asyncio.run(main_async())